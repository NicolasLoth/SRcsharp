using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace SRcsharp.Library
{
    
    public static class SREnums
    {
        public enum NearbySchema
        {
            Fixed, // use nearbyFactor as fix nearby radius
            Circle, // use base circle radius of bbox multiplied with nearbyFactor
            Sphere, // use sphere radius of bbox multiplied with nearbyFactor
            Perimeter, // use base perimeter multiplied with nearbyFactor
            Area // use area multiplied with nearbyFactor
        }

        // Calculation schema to determine sector size for extruding bbox area
        public enum SectorSchema
        {
            Fixed, // use sectorFactor as fix sector lenght for extruding area
            Dimension, // use same dimension as object bbox multiplied with sectorFactor
            Perimeter, // use base perimeter multiplied with sectorFactor
            Area, // use area multiplied with sectorFactor
            Nearby // use nearby settings of spatial adjustment for extruding
        }

        public enum SpatialPredicatedCategories { None, Topology, Connectivity, Comparability, Similarity, Sectoriality, Visbility, Geography}

        public enum SpatialAtribute
        {
            None,
            Width,
            Height,
            Depth,
            Length,
            Angle,
            Yaw,
            Aazimuth, // deviation from north direction
            Footprint, // base surface
            Frontface, // front surface
            Sideface, // side surface
            Surface, // total bbox surface
            Volume,
            Perimeter,
            Baseradius, // radius of 2D floorground circle
            Radius, // radius of sphere including 3D bbox around center
            Speed,
            Confidence,
            Lifespan
        }

        public enum SpatialExistence
        {
            Undefined,
            Real, // visual, detected, real object
            Virtual, // visual, created, virtual object
            Conceptual, // non-visual, conceptual area, e.g., corner, zone, sensing area, region of interest, interaction field
            Aggregational // non-visual part-of group, container
        }

        //public static SpatialExistence Named(this SpatialExistence value, string name)
        //{
        //    var res = SpatialExistence.Undefined;
        //    Enum.TryParse(name, out res);
        //    return res;
        //}

        public enum ObjectCause
        {
            Unknown,
            PlaneDetected, // on-device plane detection
            ObjectDetected, // on-device object detection
            SelfTracked, // device of user registered and tracked in space
            UserCaptured, // captured by user
            UserGenerated, // generated by user
            RuleProduced, // produced by rule or by program logic
            RemoteCreated // created by remote service
        }

        //public static ObjectCause Named(this ObjectCause value, string name)
        //{
        //    var res = ObjectCause.Unknown;
        //    Enum.TryParse(name, out res);
        //    return res;
        //}

        public enum MotionState
        {
            Unknown,
            Stationary, // immobile
            Idle, // idle
            Moving // moving
        }

        public enum ObjectShape
        {
            Unknown,
            Planar, // plane, thin box
            Cubical, // box
            Spherical,
            Cylindrical, // along longest dimension when long
            Conical,
            Irregular, // complex shape
            Changing // changing shape, e.g., of creature
        }

        public enum ObjectHandling
        {
            None,
            Movable,
            Slidable,
            Liftable,
            Portable,
            Rotatable,
            Openable
        }

       


    }
}
